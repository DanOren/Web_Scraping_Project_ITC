drop DATABASE scraper;
create DATABASE scraper;
use scraper;

CREATE TABLE IF NOT EXISTS studios (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS directors (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS genres (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS creators (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS platforms (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255)
);

CREATE TABLE IF NOT EXISTS movies (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255) NOT NULL,
  unique_identifier varchar(255) NOT NULL,
  meta_score varchar(255),
  user_score varchar(255),
  release_year varchar(255),
  rating varchar(255),
  runtime varchar(255),
  summary varchar(10000),
  studio_id int,
  director_id int,
  FOREIGN KEY(studio_id) REFERENCES studios(id),
  FOREIGN KEY(director_id) REFERENCES directors(id)
);

CREATE TABLE IF NOT EXISTS movies_genres (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  movie_id int,
  genre_id int,
  FOREIGN KEY(movie_id) REFERENCES movies(id),
  FOREIGN KEY(genre_id) REFERENCES genres(id)
);

CREATE TABLE IF NOT EXISTS tv_shows (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255) NOT NULL,
  unique_identifier varchar(255) NOT NULL,
  meta_score varchar(255),
  user_score varchar(255),
  release_year varchar(255),
  rating varchar(255),
  summary varchar(10000),
  studio_id int,
  creator_id int,
  FOREIGN KEY(studio_id) REFERENCES studios(id),
  FOREIGN KEY(creator_id) REFERENCES creators(id)
);

CREATE TABLE IF NOT EXISTS tv_shows_genres (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  tv_show_id int,
  genre_id int,
  FOREIGN KEY(tv_show_id) REFERENCES tv_shows(id),
  FOREIGN KEY(genre_id) REFERENCES genres(id)
);

CREATE TABLE IF NOT EXISTS games (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  name varchar(255) NOT NULL,
  unique_identifier varchar(255) NOT NULL,
  meta_score varchar(255),
  user_score varchar(255),
  release_year varchar(255),
  rating varchar(255),
  summary varchar(10000),
  studio_id int,
  FOREIGN KEY(studio_id) REFERENCES studios(id)
);

CREATE TABLE IF NOT EXISTS games_genres (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  game_id int,
  genre_id int,
  FOREIGN KEY(game_id) REFERENCES games(id),
  FOREIGN KEY(genre_id) REFERENCES genres(id)
);

CREATE TABLE IF NOT EXISTS games_platforms (
  id int PRIMARY KEY NOT NULL AUTO_INCREMENT,
  game_id int,
  platform_id int,
  FOREIGN KEY(game_id) REFERENCES games(id),
  FOREIGN KEY(platform_id) REFERENCES platforms(id)  
);
